"use strict";(self.webpackChunkjoy_treasury=self.webpackChunkjoy_treasury||[]).push([[3841],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/nav-head-dropdown/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const NavHeadDropdownraw_namespaceObject='import React from "react";\nimport AspectRatio from "@mui/joy/AspectRatio";\nimport Dropdown from "@mui/joy/Dropdown";\nimport Link from "@mui/joy/Link";\nimport List from "@mui/joy/List";\nimport ListItem from "@mui/joy/ListItem";\nimport ListItemButton from "@mui/joy/ListItemButton";\nimport ListItemContent from "@mui/joy/ListItemContent";\nimport Menu from "@mui/joy/Menu";\nimport MenuButton from "@mui/joy/MenuButton";\nimport MenuItem from "@mui/joy/MenuItem";\nimport Sheet from "@mui/joy/Sheet";\nimport SvgIcon from "@mui/joy/SvgIcon";\nimport Typography from "@mui/joy/Typography";\n\nexport default function NavHeadDropdown() {\n  const [open, setOpen] = React.useState(false);\n  const inRef = React.useRef(open);\n\n  const handleEnter = () => {\n    inRef.current = true;\n    setOpen(true);\n  };\n  const handleLeave = () => {\n    inRef.current = false;\n    setTimeout(() => {\n      if (!inRef.current) {\n        setOpen(false);\n      }\n    }, 200);\n  };\n\n  return (\n    <Sheet sx={{ boxShadow: "sm", p: 2 }}>\n      <nav>\n        <List\n          orientation="horizontal"\n          sx={{\n            gap: 2,\n            \'& a, & [role="button"]\': {\n              borderRadius: 40,\n              textDecorationColor: (theme) => theme.vars.palette.divider,\n            },\n          }}\n        >\n          <ListItem>\n            <ListItemButton component={Link} href="#">\n              Home\n            </ListItemButton>\n          </ListItem>\n          <ListItem>\n            <Dropdown\n              open={open}\n              onOpenChange={(event, newValue) => setOpen(newValue)}\n            >\n              <MenuButton\n                onMouseEnter={handleEnter}\n                onMouseLeave={handleLeave}\n                slots={{ root: ListItemButton }}\n                sx={{ gap: 1 }}\n              >\n                Products\n                <SvgIcon>\n                  <svg\n                    xmlns="http://www.w3.org/2000/svg"\n                    fill="none"\n                    viewBox="0 0 24 24"\n                    strokeWidth={1.5}\n                    stroke="currentColor"\n                  >\n                    <path\n                      strokeLinecap="round"\n                      strokeLinejoin="round"\n                      d="M19.5 8.25l-7.5 7.5-7.5-7.5"\n                    />\n                  </svg>\n                </SvgIcon>\n              </MenuButton>\n              <Menu\n                placement="bottom-start"\n                onMouseEnter={handleEnter}\n                onMouseLeave={handleLeave}\n                sx={{ width: 300 }}\n              >\n                <MenuItem sx={{ gap: 2 }}>\n                  <AspectRatio\n                    ratio="1"\n                    sx={{ borderRadius: "50%", minWidth: 40 }}\n                  >\n                    <div>\n                      <SvgIcon>\n                        <svg\n                          xmlns="http://www.w3.org/2000/svg"\n                          fill="none"\n                          viewBox="0 0 24 24"\n                          strokeWidth={1.5}\n                          stroke="currentColor"\n                        >\n                          <path\n                            strokeLinecap="round"\n                            strokeLinejoin="round"\n                            d="M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z"\n                          />\n                        </svg>\n                      </SvgIcon>\n                    </div>\n                  </AspectRatio>\n                  <ListItemContent>\n                    <Typography level="title-md">Locky</Typography>\n                    <Typography level="body-sm">\n                      Lock you app at anytime.\n                    </Typography>\n                  </ListItemContent>\n                </MenuItem>\n                <MenuItem sx={{ gap: 2 }}>\n                  <AspectRatio\n                    ratio="1"\n                    sx={{ borderRadius: "50%", minWidth: 40 }}\n                  >\n                    <div>\n                      <SvgIcon>\n                        <svg\n                          xmlns="http://www.w3.org/2000/svg"\n                          fill="none"\n                          viewBox="0 0 24 24"\n                          strokeWidth={1.5}\n                          stroke="currentColor"\n                        >\n                          <path\n                            strokeLinecap="round"\n                            strokeLinejoin="round"\n                            d="M9.75 3.104v5.714a2.25 2.25 0 01-.659 1.591L5 14.5M9.75 3.104c-.251.023-.501.05-.75.082m.75-.082a24.301 24.301 0 014.5 0m0 0v5.714c0 .597.237 1.17.659 1.591L19.8 15.3M14.25 3.104c.251.023.501.05.75.082M19.8 15.3l-1.57.393A9.065 9.065 0 0112 15a9.065 9.065 0 00-6.23-.693L5 14.5m14.8.8l1.402 1.402c1.232 1.232.65 3.318-1.067 3.611A48.309 48.309 0 0112 21c-2.773 0-5.491-.235-8.135-.687-1.718-.293-2.3-2.379-1.067-3.61L5 14.5"\n                          />\n                        </svg>\n                      </SvgIcon>\n                    </div>\n                  </AspectRatio>\n                  <ListItemContent>\n                    <Typography level="title-md">Experimento</Typography>\n                    <Typography level="body-sm">\n                      Safe environment for your next application.\n                    </Typography>\n                  </ListItemContent>\n                </MenuItem>\n              </Menu>\n            </Dropdown>\n          </ListItem>\n          <ListItem>\n            <ListItemButton component={Link} href="#">\n              About us\n            </ListItemButton>\n          </ListItem>\n          <ListItem>\n            <ListItemButton component={Link} href="#">\n              Contacts\n            </ListItemButton>\n          </ListItem>\n        </List>\n      </nav>\n    </Sheet>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Nav/Head/Dropdown"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx joy-treasury@latest clone nav-head-dropdown\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"navheaddropdown",children:"NavHeadDropdown"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:NavHeadDropdownraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);