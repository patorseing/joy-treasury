"use strict";(self.webpackChunkjoy_treasury=self.webpackChunkjoy_treasury||[]).push([[3483],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/layout-scroll-shadow/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const LayoutScrollShadowraw_namespaceObject='import React from "react";\nimport Box, { BoxProps } from "@mui/joy/Box";\n\nexport default function LayoutScrollShadow({\n  sx,\n  orientation = "vertical",\n  ...props\n}: BoxProps & { orientation?: "vertical" | "horizontal" }) {\n  return (\n    <Box\n      sx={[\n        (theme) => ({\n          "--layout-orientation": `var(--${orientation})`,\n          "--vertical": "var(--layout-orientation,)",\n          "--horizontal": "var(--layout-orientation,)",\n          "--layout-background": theme.vars.palette.background.body,\n          overflow:\n            "var(--vertical, hidden auto) var(--horizontal, auto hidden)",\n          background: `linear-gradient(var(--vertical, to bottom) var(--horizontal, to right), var(--layout-background) 30%, transparent),\n            linear-gradient(var(--vertical, to bottom) var(--horizontal, to right), transparent, var(--layout-background) 70%) 0 100%,\n            radial-gradient(\n              farthest-side at var(--vertical, 50% 0) var(--horizontal, 0 50%),\n              rgba(0, 0, 0, 0.12),\n              rgba(0, 0, 0, 0)\n            ),\n            radial-gradient(\n                farthest-side at var(--vertical, 50% 100%) var(--horizontal, 100% 50%),\n                rgba(0, 0, 0, 0.12),\n                rgba(0, 0, 0, 0)\n              )\n              0 100%`,\n          backgroundSize:\n            "var(--vertical, 100% 40px, 100% 40px, 100% 14px, 100% 14px) var(--horizontal, 40px 100%, 40px 100%, 14px 100%, 14px 100%)",\n          backgroundPosition:\n            "var(--vertical, 0 0, 0 100%, 0 0, 0 100%) var(--horizontal, 0 0, 100% 0, 0 0, 100% 0)",\n          backgroundRepeat: "no-repeat",\n          backgroundAttachment: "local, local, scroll, scroll",\n        }),\n        ...(Array.isArray(sx) ? sx : [sx]),\n      ]}\n      {...props}\n    />\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code",h3:"h3",p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Layout/Scroll/Shadow"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx joy-treasury@latest clone layout-scroll-shadow\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"orientation",children:"Orientation"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"By default, the shadow is displayed for vertical scrolling:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-js",children:"<LayoutScrollShadow>...long content</LayoutScrollShadow>\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Set ",(0,jsx_runtime.jsx)(_components.code,{children:'orientation="horizontal"'})," if you want to display the shadow for horizontal scrolling:"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-js",children:'<LayoutScrollShadow orientation="horizontal" sx={{ display: "flex" }}>\n  ...long content\n</LayoutScrollShadow>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"background",children:"Background"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To set the background of the scroller to match the container, use ",(0,jsx_runtime.jsx)(_components.code,{children:"sx"})," prop to target CSS variable ",(0,jsx_runtime.jsx)(_components.code,{children:"--layout-background"}),":"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-js",children:'<LayoutScrollShadow\n  sx={{\n    "--layout-background": (theme) => theme.vars.palette.background.surface,\n  }}\n>\n  ...long content\n</LayoutScrollShadow>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"note",children:"Note"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The shadow uses CSS background property, so it works only for the content without background.\nOtherwise, the content's background will cover the shadow."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"layoutscrollshadow",children:"LayoutScrollShadow"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:LayoutScrollShadowraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);