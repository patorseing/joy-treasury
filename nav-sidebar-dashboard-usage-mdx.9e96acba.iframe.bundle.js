"use strict";(self.webpackChunkjoy_treasury=self.webpackChunkjoy_treasury||[]).push([[5607],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/nav-sidebar-dashboard/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const NavSidebarDashboardraw_namespaceObject='import React from "react";\nimport List from "@mui/joy/List";\nimport ListItem from "@mui/joy/ListItem";\nimport ListItemButton from "@mui/joy/ListItemButton";\nimport ListItemDecorator from "@mui/joy/ListItemDecorator";\nimport ListSubheader from "@mui/joy/ListSubheader";\nimport Sheet from "@mui/joy/Sheet";\nimport SvgIcon from "@mui/joy/SvgIcon";\n\nexport default function NavSidebarDashboard() {\n  return (\n    <Sheet component="nav">\n      <List sx={{ gap: 2 }}>\n        <ListItem nested>\n          <List>\n            <ListItem>\n              <ListItemButton selected color="primary" component="a" href="#">\n                <ListItemDecorator>\n                  <SvgIcon>\n                    <svg\n                      xmlns="http://www.w3.org/2000/svg"\n                      fill="none"\n                      viewBox="0 0 24 24"\n                      strokeWidth={1.5}\n                      stroke="currentColor"\n                    >\n                      <path\n                        strokeLinecap="round"\n                        strokeLinejoin="round"\n                        d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"\n                      />\n                    </svg>\n                  </SvgIcon>\n                </ListItemDecorator>\n                Home\n              </ListItemButton>\n            </ListItem>\n            <ListItem>\n              <ListItemButton component="a" href="#">\n                <ListItemDecorator>\n                  <SvgIcon>\n                    <svg\n                      xmlns="http://www.w3.org/2000/svg"\n                      fill="none"\n                      viewBox="0 0 24 24"\n                      strokeWidth={1.5}\n                      stroke="currentColor"\n                    >\n                      <path\n                        strokeLinecap="round"\n                        strokeLinejoin="round"\n                        d="M9.813 15.904L9 18.75l-.813-2.846a4.5 4.5 0 00-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 003.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 003.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 00-3.09 3.09zM18.259 8.715L18 9.75l-.259-1.035a3.375 3.375 0 00-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 002.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 002.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 00-2.456 2.456zM16.894 20.567L16.5 21.75l-.394-1.183a2.25 2.25 0 00-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 001.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 001.423 1.423l1.183.394-1.183.394a2.25 2.25 0 00-1.423 1.423z"\n                      />\n                    </svg>\n                  </SvgIcon>\n                </ListItemDecorator>\n                Favorites\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </ListItem>\n        <ListItem nested>\n          <ListSubheader sx={{ fontWeight: "lg" }}>Dashboard</ListSubheader>\n          <List>\n            <ListItem>\n              <ListItemButton component="a" href="#">\n                <ListItemDecorator />\n                Overview\n              </ListItemButton>\n            </ListItem>\n            <ListItem>\n              <ListItemButton component="a" href="#">\n                <ListItemDecorator>\n                  <SvgIcon>\n                    <svg\n                      xmlns="http://www.w3.org/2000/svg"\n                      fill="none"\n                      viewBox="0 0 24 24"\n                      strokeWidth={1.5}\n                      stroke="currentColor"\n                    >\n                      <path\n                        strokeLinecap="round"\n                        strokeLinejoin="round"\n                        d="M7.5 14.25v2.25m3-4.5v4.5m3-6.75v6.75m3-9v9M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z"\n                      />\n                    </svg>\n                  </SvgIcon>\n                </ListItemDecorator>\n                Analytics\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </ListItem>\n\n        <ListItem nested>\n          <ListSubheader sx={{ fontWeight: "lg" }}>Workspace</ListSubheader>\n          <List>\n            <ListItem>\n              <ListItemButton component="a" href="#">\n                <ListItemDecorator>\n                  <SvgIcon>\n                    <svg\n                      xmlns="http://www.w3.org/2000/svg"\n                      fill="none"\n                      viewBox="0 0 24 24"\n                      strokeWidth={1.5}\n                      stroke="currentColor"\n                    >\n                      <path\n                        strokeLinecap="round"\n                        strokeLinejoin="round"\n                        d="M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z"\n                      />\n                    </svg>\n                  </SvgIcon>\n                </ListItemDecorator>\n                Groups\n              </ListItemButton>\n            </ListItem>\n            <ListItem>\n              <ListItemButton component="a" href="#">\n                <ListItemDecorator>\n                  <SvgIcon>\n                    <svg\n                      xmlns="http://www.w3.org/2000/svg"\n                      fill="none"\n                      viewBox="0 0 24 24"\n                      strokeWidth={1.5}\n                      stroke="currentColor"\n                    >\n                      <path\n                        strokeLinecap="round"\n                        strokeLinejoin="round"\n                        d="M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z"\n                      />\n                    </svg>\n                  </SvgIcon>\n                </ListItemDecorator>\n                Authentication\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </ListItem>\n      </List>\n    </Sheet>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Nav/Sidebar/Dashboard"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx joy-treasury@latest clone nav-sidebar-dashboard\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"navsidebardashboard",children:"NavSidebarDashboard"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:NavSidebarDashboardraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);