"use strict";(self.webpackChunkjoy_treasury=self.webpackChunkjoy_treasury||[]).push([[6904],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/card-social-comment/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const CardSocialCommentraw_namespaceObject='import React from "react";\nimport {\n  Avatar,\n  Box,\n  ButtonGroup,\n  Card,\n  CardContent,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  SvgIcon,\n  Typography,\n} from "@mui/joy";\n\nexport default function CardSocialComment() {\n  const comments = [\n    {\n      commentor: "Edward Clark",\n      commentAt: "14:07",\n      comments: [\n        <Typography>\n          The biggest change of design in 2019 will be the makeup of the people\n          doing the actual design work.\n        </Typography>,\n        <Typography>\n          <Link underline="none" variant="soft" color="primary">\n            @Steve\n          </Link>{" "}\n          please read this.\n        </Typography>,\n      ],\n      color: "success",\n    },\n    {\n      commentor: "Albert Ox",\n      commentAt: "13:37",\n      comments: [\n        <Typography>\n          We absolutely need to get smarter about privacy. Society is creeped\n          out by big tech and big data.\n        </Typography>,\n      ],\n      color: "warning",\n    },\n  ] as const;\n\n  const convertNameToAvatarText = (name: string) =>\n    name.split(" ").reduce((acc, word) => `${acc}${word[0] || ""}`, "");\n\n  return (\n    <Card sx={{ borderRadius: "xl" }}>\n      <CardContent>\n        <List\n          sx={{\n            py: 0,\n            "--ListItem-paddingLeft": 0,\n            "--ListItem-paddingRight": 0,\n          }}\n        >\n          {comments.map(({ commentor, commentAt, comments, color }) => (\n            <ListItem>\n              <Avatar color={color} sx={{ alignSelf: "flex-start" }}>\n                {convertNameToAvatarText(commentor)}\n              </Avatar>\n              <Box width="100%" marginLeft="8px" marginBottom="8px">\n                <Box\n                  display="flex"\n                  justifyContent="space-between"\n                  alignItems="center"\n                  marginBottom="4px"\n                >\n                  <Typography fontWeight="lg">{commentor}</Typography>\n                  <Typography fontSize="xs">{commentAt}</Typography>\n                </Box>\n                <Box\n                  paddingRight="32px"\n                  position="relative"\n                  sx={{\n                    "&:hover .MuiButtonGroup-root": {\n                      visibility: "visible",\n                      transform: "translateY(-100%)",\n                      opacity: 1,\n                    },\n                  }}\n                >\n                  {comments}\n                  <ButtonGroup\n                    variant="soft"\n                    color="neutral"\n                    size="sm"\n                    sx={{\n                      visibility: "hidden",\n                      opacity: 0,\n                      position: "absolute",\n                      top: "0px",\n                      right: "0px",\n                      transition: "0.2s",\n                      transform: "translateY(-50%)",\n                      "& .MuiIconButton-root": {\n                        bgcolor: "background.body",\n                        border: "1px solid",\n                        borderColor:\n                          "var(--variant-outlinedBorder, var(--joy-palette-neutral-outlinedBorder))",\n                      },\n                      "& .MuiIconButton-root:hover": {\n                        "--Icon-color": "var(--joy-palette-primary-600)",\n                      },\n                    }}\n                  >\n                    <IconButton>\n                      <SvgIcon>\n                        <svg\n                          width="24"\n                          height="24"\n                          viewBox="0 0 24 24"\n                          fill="none"\n                          stroke="currentColor"\n                          strokeWidth="2"\n                          strokeLinecap="round"\n                          strokeLinejoin="round"\n                          className="lucide lucide-corner-up-right"\n                        >\n                          <polyline points="15 14 20 9 15 4" />\n                          <path d="M4 20v-7a4 4 0 0 1 4-4h12" />\n                        </svg>\n                      </SvgIcon>\n                    </IconButton>\n                    <IconButton>\n                      <SvgIcon>\n                        <svg\n                          width="24"\n                          height="24"\n                          viewBox="0 0 24 24"\n                          fill="none"\n                          stroke="currentColor"\n                          strokeWidth="2"\n                          strokeLinecap="round"\n                          strokeLinejoin="round"\n                          className="lucide lucide-arrow-right"\n                        >\n                          <path d="M5 12h14" />\n                          <path d="m12 5 7 7-7 7" />\n                        </svg>\n                      </SvgIcon>\n                    </IconButton>\n                    <IconButton>\n                      <SvgIcon>\n                        <svg\n                          width="24"\n                          height="24"\n                          viewBox="0 0 24 24"\n                          fill="none"\n                          stroke="currentColor"\n                          strokeWidth="2"\n                          strokeLinecap="round"\n                          strokeLinejoin="round"\n                          className="lucide lucide-star"\n                        >\n                          <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />\n                        </svg>\n                      </SvgIcon>\n                    </IconButton>\n                    <IconButton>\n                      <SvgIcon>\n                        <svg\n                          width="24"\n                          height="24"\n                          viewBox="0 0 24 24"\n                          fill="none"\n                          stroke="currentColor"\n                          strokeWidth="2"\n                          strokeLinecap="round"\n                          strokeLinejoin="round"\n                          className="lucide lucide-more-horizontal"\n                        >\n                          <circle cx="12" cy="12" r="1" />\n                          <circle cx="19" cy="12" r="1" />\n                          <circle cx="5" cy="12" r="1" />\n                        </svg>\n                      </SvgIcon>\n                    </IconButton>\n                  </ButtonGroup>\n                </Box>\n              </Box>\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Card/Social/Comment"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx joy-treasury@latest clone card-social-comment\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cardsocialcomment",children:"CardSocialComment"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:CardSocialCommentraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);