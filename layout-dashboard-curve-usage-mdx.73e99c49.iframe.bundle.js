"use strict";(self.webpackChunkjoy_treasury=self.webpackChunkjoy_treasury||[]).push([[1058],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/layout-dashboard-curve/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const LayoutDashboardCurveraw_namespaceObject='import React from "react";\nimport Box from "@mui/joy/Box";\nimport Container from "@mui/joy/Container";\nimport CssBaseline from "@mui/joy/CssBaseline";\nimport GlobalStyles from "@mui/joy/GlobalStyles";\nimport IconButton from "@mui/joy/IconButton";\nimport Sheet from "@mui/joy/Sheet";\nimport SvgIcon from "@mui/joy/SvgIcon";\nimport Typography from "@mui/joy/Typography";\n\nconst openSidebar = () => {\n  if (typeof document !== "undefined") {\n    document.body.style.overflow = "hidden";\n    document.documentElement.style.setProperty("--SideNavigation-slideIn", "1");\n  }\n};\n\nconst closeSidebar = () => {\n  if (typeof document !== "undefined") {\n    document.documentElement.style.removeProperty("--SideNavigation-slideIn");\n    document.body.style.removeProperty("overflow");\n  }\n};\n\nconst toggleSidebar = () => {\n  if (typeof window !== "undefined" && typeof document !== "undefined") {\n    const slideIn = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue("--SideNavigation-slideIn");\n    if (slideIn) {\n      closeSidebar();\n    } else {\n      openSidebar();\n    }\n  }\n};\n\nexport function Page({ children }: React.PropsWithChildren) {\n  return (\n    <Box\n      sx={{\n        display: "grid",\n        minHeight: "100dvh",\n        gridTemplateAreas: \'"sidebar header" "sidebar main"\',\n        gridTemplateColumns:\n          "clamp(0px, (100vw - var(--view-breakpoint)) * 999, var(--Sidebar-width)) 1fr",\n        gridTemplateRows:\n          "clamp(0px, (var(--view-breakpoint) - 100vw) * 999, var(--Header-height)) 1fr",\n        transition: "grid-template-columns 0.2s",\n        bgcolor: "neutral.800",\n      }}\n    >\n      <GlobalStyles\n        styles={{\n          ":root": {\n            "--Sidebar-width": "256px",\n            "--Header-height": "56px",\n            "--view-breakpoint": "900px",\n          },\n        }}\n      />\n      <CssBaseline />\n      {children}\n    </Box>\n  );\n}\n\nexport function Sidebar({ children }: React.PropsWithChildren) {\n  return (\n    <>\n      <Box\n        sx={{\n          position: "fixed",\n          zIndex: (theme) => theme.vars.zIndex.modal,\n          top: 0,\n          left: 0,\n          width: "100vw",\n          height: "100vh",\n          opacity: "var(--SideNavigation-slideIn)",\n          backgroundColor: "background.backdrop",\n          transition: "opacity 0.4s",\n          transform: {\n            xs: "translateX(calc(100% * (var(--SideNavigation-slideIn, 0) - 1) + var(--SideNavigation-slideIn, 0) * var(--FirstSidebar-width, 0px)))",\n            lg: "translateX(-100%)",\n          },\n        }}\n        onClick={() => closeSidebar()}\n      />\n      <Sheet\n        component="nav"\n        variant="solid"\n        color="neutral"\n        invertedColors\n        sx={{\n          gridArea: "sidebar",\n          position: {\n            xs: "fixed",\n            md: "sticky",\n          },\n          transform: {\n            xs: "translateX(calc(100% * (var(--SideNavigation-slideIn, 0) - 1)))",\n            md: "none",\n          },\n          transition: "transform 0.2s",\n          zIndex: (theme) => theme.vars.zIndex.modal,\n          height: "100dvh",\n          width: "var(--Sidebar-width)",\n          top: 0,\n          p: 2,\n          flexShrink: 0,\n          display: "flex",\n          flexDirection: "column",\n          gap: 1,\n          bgcolor: "neutral.800",\n        }}\n      >\n        {children}\n      </Sheet>\n    </>\n  );\n}\n\nexport function Main({ children }: React.PropsWithChildren) {\n  return (\n    <Box\n      component="main"\n      sx={{\n        minWidth: 0,\n        gridArea: "main",\n        bgcolor: "background.surface",\n        borderTopLeftRadius:\n          "clamp(0px, (100vw - var(--view-breakpoint)) * 999, 40px)",\n        marginTop: "clamp(0px, (100vw - var(--view-breakpoint)) * 999, 12px)",\n        transition: "border-radius 0.2s, margin-top 0.2s",\n      }}\n    >\n      {children}\n    </Box>\n  );\n}\n\nexport function Header() {\n  return (\n    <Sheet\n      component="header"\n      sx={{\n        gridArea: "header",\n        height: "var(--Header-height)",\n        position: "sticky",\n        top: 0,\n        transform: { md: "translateY(-120%)" },\n        transition: "transform 0.3s",\n        px: { xs: 2, sm: 3 },\n        display: "flex",\n        gap: 1.5,\n        alignItems: "center",\n        borderBottom: "1px solid",\n        borderColor: "divider",\n      }}\n    >\n      <IconButton\n        size="sm"\n        onClick={toggleSidebar}\n        sx={{ display: { md: "none" } }}\n      >\n        <SvgIcon>\n          <svg\n            width="15"\n            height="15"\n            viewBox="0 0 15 15"\n            fill="none"\n            xmlns="http://www.w3.org/2000/svg"\n          >\n            <path\n              d="M1.5 3C1.22386 3 1 3.22386 1 3.5C1 3.77614 1.22386 4 1.5 4H13.5C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3H1.5ZM1 7.5C1 7.22386 1.22386 7 1.5 7H13.5C13.7761 7 14 7.22386 14 7.5C14 7.77614 13.7761 8 13.5 8H1.5C1.22386 8 1 7.77614 1 7.5ZM1 11.5C1 11.2239 1.22386 11 1.5 11H13.5C13.7761 11 14 11.2239 14 11.5C14 11.7761 13.7761 12 13.5 12H1.5C1.22386 12 1 11.7761 1 11.5Z"\n              fill="currentColor"\n              fill-rule="evenodd"\n              clip-rule="evenodd"\n            ></path>\n          </svg>\n        </SvgIcon>\n      </IconButton>\n      <Typography level="title-md">Global Header</Typography>\n    </Sheet>\n  );\n}\n\nexport default function LayoutDashboardCurve() {\n  return (\n    <Page>\n      <Sidebar>Navigation goes here.</Sidebar>\n      <Header />\n      <Main>\n        <Container sx={{ py: 3 }}>\n          <Typography level="h1" sx={{ mb: 2 }}>\n            Page\n          </Typography>\n\n          <Sheet\n            variant="outlined"\n            sx={{\n              p: 3,\n              borderRadius: "sm",\n              boxShadow: "xs",\n              minHeight: 300,\n            }}\n          >\n            Page content goes here.\n          </Sheet>\n        </Container>\n      </Main>\n    </Page>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Layout/Dashboard/Curve"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx joy-treasury@latest clone layout-dashboard-curve\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"layoutdashboardcurve",children:"LayoutDashboardCurve"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:LayoutDashboardCurveraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);